generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(JOB_SEEKER)
  firstName String
  lastName  String
  resetToken String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  jobPostings    JobPosting[]    @relation("CreatedBy")
  jobApplications JobApplication[]
}

model Company {
  id          String   @id @default(uuid())
  name        String
  description String?
  website     String?
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  jobPostings JobPosting[]
}

model JobPosting {
  id          String   @id @default(uuid())
  title       String
  description String
  location    String?
  salary      String?
  type        JobType  @default(FULL_TIME)
  status      JobStatus @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  company   Company @relation(fields: [companyId], references: [id])
  companyId String
  createdBy User    @relation("CreatedBy", fields: [userId], references: [id])
  userId    String
  applications JobApplication[]
}

model JobApplication {
  id        String   @id @default(uuid())
  status    ApplicationStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  job     JobPosting @relation(fields: [jobId], references: [id])
  jobId   String
  user    User       @relation(fields: [userId], references: [id])
  userId  String
}

enum Role {
  ADMIN
  HR
  JOB_SEEKER
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  FREELANCE
  INTERNSHIP
}

enum JobStatus {
  ACTIVE
  CLOSED
  DRAFT
}

enum ApplicationStatus {
  PENDING
  REVIEWED
  SHORTLISTED
  REJECTED
  ACCEPTED
} 